{"version":3,"sources":["component/home.js","component/signup.js","App.js","serviceWorker.js","index.js"],"names":["Header","Layout","Content","Footer","Sider","SubMenu","Menu","Home","state","collapsed","login","onCollapse","console","log","setState","logout","text","content","style","cursor","onClick","this","minHeight","collapsible","className","src","theme","defaultSelectedKeys","mode","Item","key","icon","PieChartOutlined","DesktopOutlined","UserOutlined","title","TeamOutlined","FileOutlined","padding","margin","placement","trigger","border","size","xs","sm","md","lg","xl","textAlign","Component","Meta","Card","SignUp","width","cover","alt","actions","SettingOutlined","EditOutlined","EllipsisOutlined","avatar","description","App","React","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.a76d2bfa.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Layout, Menu, Breadcrumb, Avatar, Popover } from \"antd\";\nimport \"antd/dist/antd.css\";\nimport \"../index.css\";\n\nimport {\n  DesktopOutlined,\n  PieChartOutlined,\n  FileOutlined,\n  TeamOutlined,\n  UserOutlined,\n} from \"@ant-design/icons\";\n\nconst { Header, Content, Footer, Sider } = Layout;\nconst { SubMenu } = Menu;\n\nexport default class Home extends Component {\n  state = {\n    collapsed: true,\n    login: false,\n  };\n\n  onCollapse = (collapsed) => {\n    console.log(collapsed);\n    this.setState({ collapsed });\n  };\n  logout = () => {\n    console.log(\"logout\");\n  };\n\n  render() {\n    const text = <span>User name</span>;\n    const content = (\n      <div>\n        <p>Content</p>\n        <p>Content</p>\n        <span style={{ cursor: \"pointer\" }} onClick={this.logout}>\n          Log Out\n        </span>\n      </div>\n    );\n\n    const buttonWidth = 70;\n\n    return (\n      <Layout style={{ minHeight: \"100vh\" }}>\n        <Sider\n          collapsible\n          collapsed={this.state.collapsed}\n          onCollapse={this.onCollapse}\n        >\n          <img\n            className=\"logo\"\n            src=\"https://static.wixstatic.com/media/51b1dd_07f5dce7e7314013ae03263d6e01843e~mv2.png/v1/fill/w_32%2Ch_32%2Clg_1%2Cusm_0.66_1.00_0.01/51b1dd_07f5dce7e7314013ae03263d6e01843e~mv2.png\"\n          />\n          <Menu theme=\"dark\" defaultSelectedKeys={[\"1\"]} mode=\"inline\">\n            <Menu.Item key=\"1\" icon={<PieChartOutlined />}>\n              Option 1\n            </Menu.Item>\n            <Menu.Item key=\"2\" icon={<DesktopOutlined />}>\n              Option 2\n            </Menu.Item>\n            <SubMenu key=\"sub1\" icon={<UserOutlined />} title=\"User\">\n              <Menu.Item key=\"3\">Tom</Menu.Item>\n              <Menu.Item key=\"4\">Bill</Menu.Item>\n              <Menu.Item key=\"5\">Alex</Menu.Item>\n            </SubMenu>\n            <SubMenu key=\"sub2\" icon={<TeamOutlined />} title=\"Team\">\n              <Menu.Item key=\"6\">Team 1</Menu.Item>\n              <Menu.Item key=\"8\">Team 2</Menu.Item>\n            </SubMenu>\n            <Menu.Item key=\"9\" icon={<FileOutlined />} />\n          </Menu>\n        </Sider>\n        <Layout className=\"site-layout\">\n          <Header className=\"site-layout-background\" style={{ padding: 0 }}>\n            <Popover\n              style={{ margin: \"11px 0px 0px 25px\" }}\n              placement=\"bottomRight\"\n              title={text}\n              content={content}\n              trigger=\"click\"\n            >\n              <Avatar\n                style={{\n                  margin: \"10px 25px\",\n                  padding: \"2px\",\n                  border: \"1px solid #d1d1f0\",\n                }}\n                size={{ xs: 24, sm: 32, md: 30, lg: 45, xl: 45 }}\n                src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\"\n              />{\" \"}\n            </Popover>\n          </Header>\n          <Content style={{ margin: \"0 16px\" }}>\n            <Breadcrumb style={{ margin: \"16px 0\" }}>\n              <Breadcrumb.Item>User</Breadcrumb.Item>\n              <Breadcrumb.Item>Bill</Breadcrumb.Item>\n            </Breadcrumb>\n            <div\n              className=\"site-layout-background\"\n              style={{ padding: 24, minHeight: 360 }}\n            >\n              Bill is a cat.\n            </div>\n          </Content>\n          <Footer style={{ textAlign: \"center\" }}>\n            Basis React-Redux App Â©2020 Created by Sanika Humbe\n          </Footer>\n        </Layout>\n      </Layout>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Card, Avatar } from \"antd\";\nimport \"antd/dist/antd.css\";\n\nimport {\n  EditOutlined,\n  EllipsisOutlined,\n  SettingOutlined,\n} from \"@ant-design/icons\";\n\nconst { Meta } = Card;\nexport default class SignUp extends Component {\n  render() {\n    return (\n      <Card\n        style={{ width: 300 }}\n        cover={\n          <img\n            alt=\"example\"\n            src=\"https://gw.alipayobjects.com/zos/rmsportal/JiqGstEfoWAOHiTxclqi.png\"\n          />\n        }\n        actions={[\n          <SettingOutlined key=\"setting\" />,\n          <EditOutlined key=\"edit\" />,\n          <EllipsisOutlined key=\"ellipsis\" />,\n        ]}\n      >\n        <Meta\n          avatar={\n            <Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />\n          }\n          title=\"Card title\"\n          description=\"This is the description\"\n        />\n      </Card>\n    );\n  }\n}","import React from \"react\";\nimport \"./index.css\";\nimport \"antd/dist/antd.css\";\n\nimport Home from \"./component/home\";\nimport SignUp from \"./component/signup\";\nexport default class App extends React.Component {\n  state = {\n    login: false,\n  };\n  render() {\n    return <div>{this.state.login ? <Home /> : <SignUp />}</div>;\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"antd/dist/antd.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}